{"version":3,"sources":["Data.js","Page.js","serviceWorker.js","index.js"],"names":["data","title","artist","model","Toolbar","pageId","useParams","parseInt","className","to","role","length","Header","Start","class","EntityViewer","src","process","ar","ar-scale","camera-controls","alt","ios-src","magic-leap","unstable-webxr","Page","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oNAyEeA,EAzEF,CACT,CACIC,MAAO,qCACPC,OAAQ,uBACRC,MAAO,MAEX,CACIF,MAAO,gBACPC,OAAQ,wBACRC,MAAO,MAEX,CACIF,MAAO,sDACPC,OAAQ,6BACRC,MAAO,MAEX,CACIF,MAAO,oBACPC,OAAQ,yBACRC,MAAO,MAEX,CACIF,MAAO,eACPC,OAAQ,yBACRC,MAAO,MAEX,CACIF,MAAO,uBACPC,OAAQ,GACRC,MAAO,MAEX,CACIF,MAAO,gBACPC,OAAQ,GACRC,MAAO,MAEX,CACIF,MAAO,eACPC,OAAQ,yBACRC,MAAO,MAEX,CACIF,MAAO,WACPC,OAAQ,4BACRC,MAAO,MAEX,CACIF,MAAO,cACPC,OAAQ,qBACRC,MAAO,MAEX,CACIF,MAAO,YACPC,OAAQ,cACRC,MAAO,MAEX,CACIF,MAAO,UACPC,OAAQ,sBACRC,MAAO,MAEX,CACIF,MAAO,uBACPC,OAAQ,6BACRC,MAAO,MAEX,CACIF,MAAO,mBACPC,OAAQ,gDACRC,MAAO,OC3Df,SAASC,IAAW,IACZC,EAAWC,cAAXD,OAEN,OADAA,EAASE,SAASF,GAEhB,yBAAKG,UAAU,iFACb,kBAAC,IAAD,CAAMC,GAAE,UAAKJ,EAAO,GAAKK,KAAK,SAASF,UAAS,mCAAyC,IAAXH,EAAe,aAAe,KAAM,uBAAGG,UAAU,uBAC/H,kBAAC,IAAD,CAAMC,GAAE,UAAKJ,EAAO,GAAKK,KAAK,SAASF,UAAS,mCAA8BH,IAAWL,EAAKW,OAAS,aAAe,KAAM,uBAAGH,UAAU,yBAK/I,SAASI,IAAU,IACXP,EAAWC,cAAXD,OACN,OACE,yBAAKG,UAAU,oBACb,4BAAKR,EAAKK,EAAS,GAAGJ,OACtB,uBAAGO,UAAU,gBAAgBR,EAAKK,EAAS,GAAGH,SAKpD,SAASW,IACP,OACE,yBAAKL,UAAU,iFACb,kBAAC,IAAD,CAAMC,GAAG,IAAIC,KAAK,SAASF,UAAU,wBAAuB,uBAAGM,MAAM,iBAK3E,SAASC,IAAgB,IACjBV,EAAWC,cAAXD,OAEN,OADAA,EAASE,SAASF,GAEhB,kCAAcS,MAAM,iCAAiCE,IAAG,UAAKC,MAAL,0BAA6CjB,EAAKK,EAAO,GAAGF,MAA5D,QAAyEe,IAAE,EAACC,WAAS,OAAOC,mBAAA,EAAgBC,IAAKrB,EAAKK,EAAO,GAAGJ,MAAOqB,UAAA,UAAYL,MAAZ,0BAAoDjB,EAAKK,EAAO,GAAGF,MAAnE,SAAiFoB,cAAA,EAAWC,kBAAA,IAuBhRC,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjB,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,KAChB,kBAACd,EAAD,OAEF,kBAAC,IAAD,CAAOc,KAAK,YACV,kBAACf,EAAD,MACA,kBAACG,EAAD,MACA,kBAACX,EAAD,WC9CQwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d34cce0.chunk.js","sourcesContent":["const data = [\n    {\n        title: \"As the Old Sing, So Pipe the Young\",\n        artist: \"Jan Steen, 1668-1670\",\n        model: \"01\"\n    },\n    {\n        title: \"The Goldfinch\",\n        artist: \"Carel Fabritius, 1654\",\n        model: \"02\"\n    },\n    {\n        title: \"Smiling Girl, a Courtesan, Holding an Obscene Image\",\n        artist: \"Gerrit van Honthorst, 1625\",\n        model: \"03\"\n    },\n    {\n        title: \"Mistress and Maid\",\n        artist: \"Johannes Vermeer, 1667\",\n        model: \"04\"\n    },\n    {\n        title: \"The Portrait\",\n        artist: \"René Magritte, 1935\",\n        model: \"05\"\n    },\n    {\n        title: \"Building in New York\",\n        artist: \"\",\n        model: \"06\"\n    },\n    {\n        title: \"Renshaw's Cow\",\n        artist: \"\",\n        model: \"07\"\n    },\n    {\n        title: \"The Red Boat\",\n        artist: \"Ruth and Eve Oosterman\",\n        model: \"08\"\n    },\n    {\n        title: \"Infantry\",\n        artist: \"Jane Alexander, 2008-2010\",\n        model: \"09\"\n    },\n    {\n        title: \"Sleepwalker\",\n        artist: \"Tony Matelli, 2014\",\n        model: \"10\"\n    },\n    {\n        title: \"That Tree\",\n        artist: \"Mark Hirsch\",\n        model: \"11\"\n    },\n    {\n        title: \"Automat\",\n        artist: \"Edward Hopper, 1927\",\n        model: \"12\"\n    },\n    {\n        title: \"Automat | Hotel Room\",\n        artist: \"Edward Hopper, 1927 | 1931\",\n        model: \"13\"\n    },\n    {\n        title: \"Maud Murray Dale\",\n        artist: \"Fernand Léger, 1935 | George Bellows, 1919\",\n        model: \"14\"\n    }\n];\n\nexport default data;","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport data from './Data';\n\nfunction Toolbar() {\n  var { pageId } = useParams();\n  pageId = parseInt(pageId);\n  return (\n    <div className=\"toolbar d-flex flex-row justify-content-between w-100 px-3 align-items-center\">\n      <Link to={`${pageId-1}`} role=\"button\" className={`btn btn-primary btn-round${pageId === 1 ? \" invisible\" : \"\"}`}><i className=\"fas fa-arrow-left\"></i></Link>\n      <Link to={`${pageId+1}`} role=\"button\" className={`btn btn-primary btn-round${pageId === data.length ? \" invisible\" : \"\"}`}><i className=\"fas fa-arrow-right\"></i></Link>\n    </div>\n  );\n}\n\nfunction Header() {\n  let { pageId } = useParams();\n  return (\n    <div className=\"header px-3 py-2\">\n      <h1>{data[pageId - 1].title}</h1>\n      <p className=\"artist-label\">{data[pageId - 1].artist}</p>\n    </div>\n  );\n}\n\nfunction Start() {\n  return (\n    <div className=\"container d-flex flex-row justify-content-center align-items-center init-page\">\n      <Link to=\"1\" role=\"button\" className=\"btn btn-light btn-lg\"><i class=\"fas fa-eye\"></i></Link>\n    </div>\n  );\n}\n\nfunction EntityViewer() {\n  var { pageId } = useParams();\n  pageId = parseInt(pageId);\n  return (\n    <model-viewer class=\"w-100 flex-grow-1 model-viewer\" src={`${process.env.PUBLIC_URL}/assets/models/${data[pageId-1].model}.glb`} ar ar-scale=\"auto\" camera-controls alt={data[pageId-1].title} ios-src={`${process.env.PUBLIC_URL}/assets/models/${data[pageId-1].model}.usdz`} magic-leap unstable-webxr></model-viewer>\n  );\n}\n\nfunction Page() {\n  return (\n    <Router>\n      <div className=\"h-100 w-100\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Start />\n          </Route>\n          <Route path=\"/:pageId\">\n            <Header />\n            <EntityViewer />\n            <Toolbar />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Page;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Page from './Page';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Page />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}